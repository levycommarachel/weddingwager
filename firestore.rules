
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // USERS
    // Logged-in users can see all user profiles (for the leaderboard).
    // Users can only create their own profile.
    // Users can update their own profile, and admins can update any profile (for settling bets).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow delete: if false; // Nobody can delete user profiles
    }

    // BETS
    // Logged-in users can see all bets.
    // Only admins can create, update, or delete bets.
    match /bets/{betId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // WAGERS
    // Users can create their own wagers.
    // Users can only read their own wagers.
    // Admins can read and update any wager (for settling bets).
    match /wagers/{wagerId} {
      allow read: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow delete: if false; // Nobody can delete wagers
    }
  }
}
