
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can be read by any authenticated user (for leaderboard).
    // Users can only be written to by themselves or an admin.
    // A user cannot make themselves an admin.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true)
                      && request.resource.data.isAdmin == resource.data.isAdmin;
    }

    // Bets can be read by any authenticated user.
    // Bets can be written to by any authenticated user (to update the pool),
    // but only an admin can change the status or winning outcome.
    // Only admins can create or delete bets.
    match /bets/{betId} {
      allow read: if request.auth != null;
      allow create, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
                      || (request.resource.data.status == resource.data.status
                          && request.resource.data.winningOutcome == resource.data.winningOutcome);
    }

    // Wagers can be read by any authenticated user.
    // Wagers can only be created by the user themselves.
    // Wagers can only be updated by an admin (to add payout).
    match /wagers/{wagerId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == wagerId.split('_')[0]
                     && request.resource.data.userId == request.auth.uid;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
